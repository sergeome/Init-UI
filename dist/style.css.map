{"version":3,"sources":["webpack:///./src/scss/src/scss/helpers/_helpers.scss","webpack:///./src/scss/src/scss/helpers/_mixins.scss","webpack:///./src/scss/src/scss/common/_reset.scss","webpack:///./src/scss/src/scss/common/_common.scss","webpack:///./src/scss/src/scss/grid/table-grid/_table-grid.scss","webpack:///./src/scss/src/scss/helpers/_media-query.scss","webpack:///./src/scss/src/scss/_config.scss","webpack:///./src/scss/src/scss/grid/motif-grid/_motif-grid.scss","webpack:///./src/scss/src/scss/grid/motif-grid/mixins/_m-grid.scss","webpack:///./src/scss/style.scss"],"names":[],"mappings":"AAAA,QC0BI,YAAa,CDtBjB,OCyBI,aAAc,CDrBlB,iBCwBI,YACA,UACA,UACA,WACA,gBACA,mBACA,mBACA,iBAAkB,CD5BtB,aC+BI,WACA,YACA,SACA,kBACA,SAAU,CD/Bd,WCsDI,MAAQ,CACR,iCACI,YACA,aAAc,CAElB,gBACI,UAAW,CACd,iBAID,eAAgB,CChFpB,EACI,SACA,UACA,qBAAsB,CAE1B,gBACI,WAAY,CAEhB,MACI,oBAAqB,CAEzB,MACI,yBACA,gBAAiB,CCGrB,SACI,UACA,aAAc,CCTlB,0BACI,iBAAkB,CAEtB,yBACI,aAAc,CCad,yBDTA,+BAEQ,WEIK,CFHR,CAIT,qBACI,kBEFa,CFYhB,gCARO,kBACA,mBACA,aENS,UFOE,CACd,+CAEG,kBAAmB,CCFvB,yBDOA,YACI,cACA,WACA,kBAAmB,CAGvB,oBACI,qBAA6B,CAGjC,qBACI,aAAc,CAIjB,gCAFO,aAAc,CAItB,WACI,kBAAmB,CAGvB,6BACI,qBAAsB,CACzB,CG8BL,gCCpFI,kBACA,mBAHsB,CPgEtB,OM6BA,sBACA,4BAA6B,CAwBhC,uGNpDO,YACA,aAAc,CAElB,kDACI,UAAW,CM0Bf,yCACI,eACA,4BAA6B,CAChC,sCC1FD,eACA,WAOA,kBACA,mBAHsB,qBD+FlB,WAGA,sBACA,oBACA,mBACA,mBAAoB,CAG5B,YACI,SAAU,CAEd,YACI,eAAgB,CAEpB,cACI,SAAU,CAOd,mCAEI,mBAAqB,CACxB,yBE+HC,mDDrQE,kBACA,mBAHsB,CPgEtB,MAAQ,CQ2MR,0JRzMI,YACA,aAAc,CQ2MlB,2ERxMI,UAAW,CM4EX,+DACI,eACA,4BAA6B,CAIjC,uGAEQ,WAAY,CAGpB,uGAEQ,UAAW,CEwHzB,sDD9QE,eACA,WAOA,kBACA,kBAHsB,CDyJtB,wCAEI,SAAU,CAEd,kCAEI,eAAgB,CAEpB,gCAEI,SAAU,CAEd,+BAEI,eAAgB,CAEpB,uCAEI,SAAU,CAEd,mBAEI,UAAW,CAEf,cClEA,sBACA,4BAA6B,CDoE7B,2GChEA,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDmEpB,uCAEI,mBAAqB,CAKrB,mCCpFJ,sBACA,4BAA6B,CD6FxB,yCCzFL,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDmFX,gDE+GX,mDDxUE,kBACA,mBAHsB,CPgEtB,MAAQ,CQ8QR,0JR5QI,YACA,aAAc,CQ8QlB,2ER3QI,UAAW,CM0KX,+DACI,eACA,4BAA6B,CAIjC,uGAEQ,WAAY,CAGpB,uGAEQ,UAAW,CE6FzB,sDDjVE,eACA,WAOA,kBACA,kBAHsB,CDuPtB,wDAEI,SAAU,CAEd,kCAEI,eAAgB,CAEpB,gEAEI,SAAU,CAEd,+BAEI,eAAgB,CAEpB,uDAEI,SAAU,CAEd,mBAEI,UAAW,CEqFjB,gBD7QU,eAQgC,CCuQ1C,gBD/QU,eAQgC,CCyQ1C,gBDjRU,eAQgC,CC2Q1C,gBDnRU,eAQgC,CC6Q1C,gBDrRU,eAQgC,CC+Q1C,gBDvRU,eAQgC,CCiR1C,gBDzRU,eAQgC,CCmR1C,gBD3RU,eAQgC,CCqR1C,gBD7RU,WAQgC,CCuR1C,gBD/RU,WAQgC,CCyR1C,gBDjSU,WAQgC,CC2R1C,gBDnSU,WAQgC,CC6R1C,gBDrSU,eAQgC,CC+R1C,gBDvSU,eAQgC,CCiS1C,gBDzSU,eAQgC,CCmS1C,gBD3SU,eAQgC,CCqS1C,gBD7SU,eAQgC,CCuS1C,gBD/SU,eAQgC,CCyS1C,gBDjTU,eAQgC,CC2S1C,gBDnTU,eAQgC,CC6S1C,gBDrTU,eAQgC,CC+S1C,gBDvTU,eAQgC,CCiT1C,gBDzTU,SAQgC,CCmT1C,gBD3TU,SAQgC,CCqT1C,gBD7TU,SAQgC,CCuT1C,gBD/TU,SAQgC,CAPnC,cAyBL,sBACA,4BAA6B,CDsK7B,2GClKA,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDiKpB,uCAEI,mBAAqB,CAKrB,mCClLJ,sBACA,4BAA6B,CD2LxB,yCCvLL,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDiLX,0BE+LX,mDDtfE,kBACA,mBAHsB,CPgEtB,MAAQ,CQ4bR,0JR1bI,YACA,aAAc,CQ4blB,2ERzbI,UAAW,CMiUX,+DACI,eACA,4BAA6B,CAIjC,uGAEQ,WAAY,CAGpB,uGAEQ,UAAW,CEoHzB,sDD/fE,eACA,WAOA,kBACA,kBAHsB,CD8YtB,yEAEI,SAAU,CAEd,kCAEI,eAAgB,CAEpB,kGAEI,SAAU,CAEd,+BAEI,eAAgB,CAEpB,wEAEI,SAAU,CAEd,mBAEI,UAAW,CE4GjB,kBD3bU,eAQgC,CCqb1C,kBD7bU,eAQgC,CCub1C,iBD/bU,eAQgC,CCyb1C,iBDjcU,eAQgC,CC2b1C,iBDncU,eAQgC,CC6b1C,iBDrcU,eAQgC,CC+b1C,iBDvcU,eAQgC,CCic1C,iBDzcU,cAQgC,CCmc1C,kBD3cU,eAQgC,CCqc1C,iBD7cU,eAQgC,CCuc1C,iBD/cU,eAQgC,CCyc1C,iBDjdU,eAQgC,CC2c1C,iBDndU,eAQgC,CC6c1C,iBDrdU,eAQgC,CC+c1C,iBDvdU,eAQgC,CCid1C,iBDzdU,eAQgC,CCmd1C,iBD3dU,eAQgC,CCqd1C,iBD7dU,cAQgC,CCud1C,iBD/dU,SAQgC,CCyd1C,iBDjeU,SAQgC,CC2d1C,iBDneU,SAQgC,CC6d1C,iBDreU,SAQgC,CC+d1C,iBDveU,SAQgC,CCie1C,iBDzeU,SAQgC,CCme1C,iBD3eU,SAQgC,CCqe1C,iBD7eU,SAQgC,CCue1C,gBD/eU,eAQgC,CCye1C,gBDjfU,eAQgC,CC2e1C,gBDnfU,eAQgC,CC6e1C,gBDrfU,eAQgC,CC+e1C,gBDvfU,eAQgC,CCif1C,gBDzfU,eAQgC,CCmf1C,gBD3fU,eAQgC,CCqf1C,gBD7fU,eAQgC,CCuf1C,gBD/fU,WAQgC,CCyf1C,gBDjgBU,WAQgC,CC2f1C,gBDngBU,WAQgC,CC6f1C,gBDrgBU,WAQgC,CC+f1C,gBDvgBU,eAQgC,CCigB1C,gBDzgBU,eAQgC,CCmgB1C,gBD3gBU,eAQgC,CCqgB1C,gBD7gBU,eAQgC,CCugB1C,gBD/gBU,eAQgC,CCygB1C,gBDjhBU,eAQgC,CC2gB1C,gBDnhBU,eAQgC,CC6gB1C,gBDrhBU,eAQgC,CC+gB1C,gBDvhBU,eAQgC,CCihB1C,gBDzhBU,eAQgC,CCmhB1C,gBD3hBU,SAQgC,CCqhB1C,gBD7hBU,SAQgC,CCuhB1C,gBD/hBU,SAQgC,CCyhB1C,gBDjiBU,SAQgC,CAPnC,cAyBL,sBACA,4BAA6B,CDuX7B,2GCnXA,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDiXpB,uCAEI,mBAAqB,CAKrB,mCClYJ,sBACA,4BAA6B,CD2YxB,yCCvYL,WACA,qBACA,sBACA,oBACA,mBACA,mBAAoB,CDiYX","file":"style.css","sourcesContent":[".hidden {\n    @include hidden;\n}\n\n.shown {\n    @include shown;\n}\n\n.visually-hidden {\n    @include visually-hidden;\n}\n.show-hidden {\n    @include show-hidden;\n}\n\n.clearfix {\n    @include clearfix;\n}\n\n.clearfix-simple {\n    @include clearfix-simple;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/helpers/_helpers.scss","/*\nUsage:\n.element{\n  @include placeholder {\n    font-style:italic;\n    color: white;\n    font-weight:100;\n  }\n}\n*/\n\n@mixin placeholder {\n    ::-webkit-input-placeholder {\n        @content\n    }\n    :-moz-placeholder {\n        @content\n    }\n    ::-moz-placeholder {\n        @content\n    }\n    :-ms-input-placeholder {\n        @content\n    }\n}\n@mixin hidden {\n    display: none;\n}\n@mixin shown {\n    display: block;\n}\n@mixin visually-hidden {\n    margin: -1px;\n    padding: 0;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    clip: rect(0 0 0 0);\n    clip: rect(0, 0, 0, 0);\n    position: absolute;\n}\n@mixin show-hidden {\n    width: auto;\n    height: auto;\n    margin: 0;\n    position: relative;\n    clip: auto;\n}\n\n/*\na {\n  color: gray;\n  @include transition(color .3s ease);\n}\n*/\n\n@mixin transform($args...) {\n    -webkit-transform: $args;\n    -moz-transform: $args;\n    -o-transform: $args;\n    transform: $args;\n}\n/*\n.container-with-floated-children {\n  @include clearfix;\n}\n*/\n\n@mixin clearfix {\n    *zoom: 1;\n    &:before, &:after {\n        content: \" \";\n        display: table;\n    }\n    &:after {\n        clear: both;\n    }\n}\n\n@mixin clearfix-simple {\n    overflow: hidden;\n}\n\n@mixin square($size){\n    width: $size;\n    height: $size;\n}\n\n@mixin absolute {\n    position: absolute;\n    content: \" \";\n}\n\n@mixin image-responsive {\n    width: 100%;\n    height: auto;\n}\n\n@mixin stretch {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/helpers/_mixins.scss","* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nimg, table, tr, td {\n    border: none;\n}\nol, ul {\n    list-style-type: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/common/_reset.scss","/*Common CSS Declarations*/\nbody {}\nh1 {}\nh2 {}\nh3 {}\np {}\na {}\na {\n    &:hover,\n    &:focus,\n    &:active {\n\n    }\n}\n\n/*Wrapper*/\n.wrapper {\n    width: 92%;\n    margin: 0 auto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/common/_common.scss","/*\nTable Grid based on mdo/table-grid.\nhttp://mdo.github.io/table-grid/\n*/\n\n/*\nGrid classes\n*/\n\n.table-col--center-inline {\n    text-align: center;\n}\n.table-col--center-block {\n    margin: 0 auto;\n}\n\n@include base-screens-max {\n    .table-grid--padded {\n        .table-col {\n            margin: $base-space;\n        }\n    }\n}\n\n.table-grid--example {\n    margin-bottom: $base-space;\n    .table-col {\n        text-align: center;\n        background: #11346E;\n        padding: $base-space;\n        color: #fff;\n    }\n    .table-col:nth-child(odd) {\n        background: #1DF18B;\n    }\n}\n\n@include small-screens-min {\n    .table-grid {\n        display: table;\n        width: 100%;\n        table-layout: fixed;\n    }\n\n    .table-grid--padded {\n        border-spacing: $base-space 0;\n    }\n\n    .table-grid--reverse {\n        direction: rtl;\n        .table-col {\n            direction: ltr;\n        }\n    }\n\n    .table-col {\n        display: table-cell;\n    }\n\n    .table-col--vertical-aligned {\n        vertical-align: middle;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/grid/table-grid/_table-grid.scss","// Base\n$base-screens-max: \"all and (max-width: #{$bp-small-width})\";\n\n// Small\n$small-screens-max: \"all and (max-width: #{$bp-medium-width})\";\n$small-screens-only: \"all and (min-width: #{$bp-small-width}) and (max-width: #{$bp-medium-width})\";\n$small-screens-min: \"all and (min-width: #{$bp-small-width})\";\n\n// Medium\n$medium-screens-max: \"all and (max-width: #{$bp-large-width})\";\n$medium-screens-only: \"all and (min-width: #{$bp-medium-width}) and (max-width: #{$bp-large-width})\";\n$medium-screens-min: \"all and (min-width: #{$bp-medium-width})\";\n\n// Large\n$large-screens-max: \"all and (max-width: #{$bp-x-large-width})\";\n$large-screens-only: \"all and (min-width: #{$bp-large-width}) and (max-width: #{$bp-x-large-width})\";\n$large-screens-min: \"all and (min-width: #{$bp-large-width})\";\n\n// Extra Large\n$x-large-screens-min: \"all and (min-width: #{$bp-x-large-width})\";\n\n/*\nMixins based on media queries above\n*/\n\n@mixin base-screens-max {\n    @media #{$base-screens-max} {\n        @content;\n    }\n}\n@mixin small-screens-min {\n    @media #{$small-screens-min} {\n        @content;\n    }\n}\n@mixin small-screens-only {\n    @media #{$small-screens-only} {\n        @content;\n    }\n}\n@mixin small-screens-max {\n    @media #{$small-screens-max} {\n        @content;\n    }\n}\n@mixin medium-screens-min {\n    @media #{$medium-screens-min} {\n        @content;\n    }\n}\n@mixin medium-screens-only {\n    @media #{$medium-screens-only} {\n        @content;\n    }\n}\n@mixin medium-screens-max {\n    @media #{$medium-screens-max} {\n        @content;\n    }\n}\n@mixin large-screens-min {\n    @media #{$large-screens-min} {\n        @content;\n    }\n}\n@mixin large-screens-only {\n    @media #{$large-screens-only} {\n        @content;\n    }\n}\n@mixin large-screens-max {\n    @media #{$large-screens-max} {\n        @content;\n    }\n}\n@mixin x-large-screens-min {\n    @media #{$x-large-screens-min}{\n        @content;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/helpers/_media-query.scss","// Grid Variables\n$base-column: 47px;\n$base-margin: 36px;\n$total-columns: 12;\n\n// Tablet Grid\n$tablet-column: 50px;\n$tablet-margin: 32px;\n$tablet-total-cols: 9;\n\n// Mobile Grid\n$mobile-column: 136px;\n$mobile-margin: 24px;\n$mobile-total-cols: 4;\n\n// Responsive Breakpoints\n$bp-small-width: 480px;\n$bp-medium-width: 768px;\n$bp-large-width: 992px;\n$bp-x-large-width: 1200px;\n\n//Spaces\n$half-space: 10px;\n$base-space: 20px;\n$base-half-space: 30px;\n$double-space: 40px;\n$triple-space: 60px;\n\n//Primary color\n$primary-color: #1B998B;\n\n//Secondary color\n$secondary-color: #11346E ;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/_config.scss","/*\n\nResponsive Grid\n\nThe default responsive grid in Motif is built with a few rules in mind:\n\n1. Each row of columns must be wrapped in a row element\n2. There's no need to specify if a column is first or last\n\nWith that in mind, there is a basic syntax to learn for what classes to use.\nOur breakpoints are classified as:\n\n- Base\n- Small\n- Medium\n- Large\n- Extra Large\n\nOur default responsive grid system only uses 3 grids to cover all of our bases:\n\n- `grid, small` covers Base and Small viewports, but cuts off at Medium\n- `grid, medium` covers only Medium\n- `grid, large` starts at Large and covers Extra Large as well (there is no max\ncutoff value for `grid, large`)\n\nUnderstanding that, the syntax should be easy to understand. In these examples,\nwe will talk about `grid, small`:\n\n- **Rows**: `.gs-row` (Grid, Small, Row)\n- **Columns**: `.gcs` (Grid, Column, Small)\n- **Column Width**: `.gs-half` (Grid, Small, Half-Width)\n\n    <div class=\"gs-row\">\n        <div class=\"gcs gs-half\">...</div>\n        <div class=\"gcs gs-half\">...</div>\n    </div>\n\nHowever, to be slightly more succinct, you can use the condensed column syntax:\n\n- **Columns (Condensed)**: `.gcs-half` (Grid, Column, Small, Half-Width)\n\n    <div class=\"gs-row\">\n        <div class=\"gcs-half\">...</div>\n        <div class=\"gcs-half\">...</div>\n    </div>\n\nIn brief, the way the grid works is that `.gcs` floats the element to the left\n(by default), and adds padding to both the left and the right. `-half` gives\nit a width of `50%`. The combined padding of the two columns bumped up against \neach other form the full \"gutter\". The `.gs-row` then clears the floats and has\na *negative* margin on both the left and the right that pops the columns out to\nthe sides the exact width of their paddings, meaning the column content lines \nup with the site boundaries on the left and right without the need to specify \n\"first\" or \"last\" column classes.\n\nTo use this responsively, then, you just add the classes by breakpoint:\n\n    <div class=\"gs-row gm-row gl-row\">\n        <div class=\"gcs-half gcm-third gcl-quarter\">\n            ...\n        </div>\n        <div class=\"gcs-half gcm-two-thirds gcl-three-quarters\">\n            ...\n        </div>\n    </div>\n\nBy default, the column breakdown of each grid breakpoint:\n\n- `grid, small`: 4 columns\n- `grid, medium`: 9 columns\n- `grid, large`: 12 columns\n\nFor the larger grids, the classes follow the numbers closely...\n\n    - `.gcl-10of12\n    - `.gcm-4of9`\n\n...in just about every combination (based on their total column number), but \nall of the grids also have a few \"fuzzy\" shortcuts as well:\n\n    - `half`\n    - `third`\n    - `quarter`\n    - `three-quarters`\n    - `two-thirds`\n\n*/\n\n@import \"mixins/_m-grid.scss\";\n\n// Aliases for all breakpoints\n.g-halves,\n.g-thirds,\n.g-quarters {\n    // Mixins\n    @include row( $mobile-margin );\n\n    /* Pretty */\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed;\n\n    ul & {\n        padding-left: 0;\n        list-style: none outside none;\n    }\n\n    > * {\n        // Mixins\n        @include grid-column();\n        @include grid-padding( $mobile-margin );\n\n        /* Display & Box Model */\n        display: inline-block;\n\n        /* Positioning */\n        float: none;\n\n        /* Pretty */\n        letter-spacing: normal;\n        word-spacing: normal;\n        vertical-align: top;\n        text-rendering: auto;\n    }\n}\n.g-halves > * {\n    width: 50%;\n}\n.g-thirds > * {\n    width: 33.33333%;\n}\n.g-quarters > * {\n    width: 25%;\n}\n\n// Opera as of 12 on Windows needs word-spacing.\n// The \".opera-only\" selector is used to prevent\n// actual prefocus styling and is not required \n// in markup.\n.opera-only :-o-prefocus,\n.g-thirds {\n    word-spacing: -0.43em;\n}\n\n/**\n * Mobile Grid\n */\n@include small-screens-max {\n    [class*=\"gs-row\"] {\n\n        @include row( $mobile-margin );\n\n        ul & {\n            padding-left: 0;\n            list-style: none outside none;\n        }\n    }\n    .gs-row {\n        &--rtl {\n            > [class*=\"gcs\"] {\n                float: right;\n            }\n        }\n        &--ltr {\n            > [class*=\"gcs\"] {\n                float: left;\n            }\n        }\n    }\n\n    [class*=\"gcs\"] {\n        @include grid-column();\n        @include grid-padding( $mobile-margin );\n    }\n    .gs-quarter,\n    .gcs-quarter {\n        width: 25%;\n    }\n    .gs-third,\n    .gcs-third {\n        width: 33.33333%;\n    }\n    .gs-half,\n    .gcs-half {\n        width: 50%;\n    }\n    .gs-two-thirds,\n    .gcs-two-thirds {\n        width: 66.66666%;\n    }\n    .gs-three-quarters,\n    .gcs-three-quarters {\n        width: 75%;\n    }\n    .gs-full,\n    .gcs-full {\n        width: 100%;\n    }\n    .gs-row--flex {\n        @include row-flex;\n    }\n    .gs-row--flex > [class*=\"gcs\"] {\n        @include column-flex;\n    }\n\n    // Opera as of 12 on Windows needs word-spacing.\n    // The \".opera-only\" selector is used to prevent\n    // actual prefocus styling and is not required\n    // in markup.\n    .opera-only :-o-prefocus,\n    .gs-row--flex {\n        word-spacing: -0.43em;\n    }\n\n    // Shortcuts/Aliases\n    .gs {\n        &-quarters,\n        &-thirds,\n        &-halves {\n            @extend [class*=\"gs-row\"];\n            @include row-flex;\n\n            > * {\n                @extend [class*=\"gcs\"];\n                @include column-flex;\n            }\n        }\n        &-quarters > * {\n            @extend .gs-quarter;\n        }\n        &-thirds > * {\n            @extend .gs-third;\n        }\n        &-halves > * {\n            @extend .gs-half;\n        }\n    }\n}\n\n/**\n * Tablet Grid\n */\n@include medium-screens-only {\n    [class*=\"gm-row\"] {\n        @include row( $tablet-margin );\n\n        ul & {\n            padding-left: 0;\n            list-style: none outside none;\n        }\n    }\n    .gm-row {\n        &--rtl {\n            > [class*=\"gcm\"] {\n                float: right;\n            }\n        }\n        &--ltr {\n            > [class*=\"gcm\"] {\n                float: left;\n            }\n        }\n    }\n\n    [class*=\"gcm\"] {\n        @include grid-column();\n        @include grid-padding( $tablet-margin );\n    }\n    .gm-quarter,\n    .gcm-quarter {\n        width: 25%;\n    }\n    .gm-third,\n    .gcm-third {\n        width: 33.33333%;\n    }\n    .gm-half,\n    .gcm-half {\n        width: 50%;\n    }\n    .gm-two-thirds,\n    .gcm-two-thirds {\n        width: 66.66666%;\n    }\n    .gm-three-quarters,\n    .gcm-three-quarters {\n        width: 75%;\n    }\n    .gm-full,\n    .gcm-full {\n        width: 100%;\n    }\n\n    @include grid-all(( $tablet-total-cols - 1 ), $tablet-total-cols, m);\n\n    .gm-row--flex {\n        @include row-flex;\n    }\n\n    .gm-row--flex > [class*=\"gcm\"] {\n        @include column-flex;\n    }\n\n    .opera-only :-o-prefocus,\n    .gm-row--flex {\n        word-spacing: -0.43em;\n    }\n\n    // Shortcuts/Aliases\n    .gm {\n        &-quarters,\n        &-thirds,\n        &-halves {\n            @extend [class*=\"gm-row\"];\n            @include row-flex;\n\n            > * {\n                @extend [class*=\"gcm\"];\n                @include column-flex;\n            }\n        }\n        &-quarters > * {\n            @extend .gm-quarter;\n        }\n        &-thirds > * {\n            @extend .gm-third;\n        }\n        &-halves > * {\n            @extend .gm-half;\n        }\n    }\n}\n\n/**\n * Desktop Grid\n */\n\n/*\n\n````desktop-grid\n<div class=\"gl-quarters\">\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n</div>\n<div class=\"gl-thirds\">\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n</div>\n<div class=\"gl-halves\">\n    <div>\n        <div class=\"block\">Half</div>\n    </div>\n    <div>\n        <div class=\"block\">Half</div>\n    </div>\n</div>\n<div class=\"gl-row\">\n    <div class=\"gcl-two-thirds\">\n        <div class=\"block\">Two Thirds</div>\n    </div>\n    <div class=\"gcl-third\">\n        <div class=\"block\">Third</div>\n    </div>\n</div>\n<div class=\"gl-row\">\n    <div class=\"gcl-three-quarters\">\n        <div class=\"block\">Three Quarters</div>\n    </div>\n    <div class=\"gcl-quarter\">\n        <div class=\"block\">Quarter</div>\n    </div>\n</div>\n````\n\n*/\n\n@include large-screens-min {\n    [class*=\"gl-row\"] {\n        @include row( $base-margin );\n\n        ul & {\n            padding-left: 0;\n            list-style: none outside none;\n        }\n    }\n    .gl-row {\n        &--rtl {\n            > [class*=\"gcl\"] {\n                float: right;\n            }\n        }\n        &--ltr {\n            > [class*=\"gcl\"] {\n                float: left;\n            }\n        }\n    }\n\n    [class*=\"gcl\"] {\n        @include grid-column();\n        @include grid-padding( $base-margin );\n    }\n    .gl-quarter,\n    .gcl-quarter {\n        width: 25%;\n    }\n    .gl-third,\n    .gcl-third {\n        width: 33.33333%;\n    }\n    .gl-half,\n    .gcl-half {\n        width: 50%;\n    }\n    .gl-two-thirds,\n    .gcl-two-thirds {\n        width: 66.66666%;\n    }\n    .gl-three-quarters,\n    .gcl-three-quarters {\n        width: 75%;\n    }\n    .gl-full,\n    .gcl-full {\n        width: 100%;\n    }\n\n    @include grid-all(( $total-columns - 1 ), $total-columns, l);\n\n\n    /*\n\n    Media Grid\n\n    The Media Grid allows you to place a grid of photos or videos (catalog or\n    retail products, etc.) without floating them, alleviating the need to concern\n    yourself with clearing the floats with rows should an object extend further\n    than another. Also, because they are not floating, it allows you to align\n    the entire group center, making sure any \"orphaned\" grid entries are centered.\n\n    The syntax is simply the same as the regular responsive grid system, except\n    the row class has a `--flex` modifier.\n\n    ````media-grid\n    <ul class=\"gs-halves gm-thirds gl-quarters\">\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n    </ul>\n    ````\n\n    */\n\n    .gl-row--flex {\n        @include row-flex;\n    }\n    .gl-row--flex > [class*=\"gcl\"] {\n        @include column-flex;\n    }\n    .opera-only :-o-prefocus,\n    .gl-row--flex {\n        word-spacing: -0.43em;\n    }\n\n    // Shortcuts/Aliases\n    .gl {\n        &-quarters,\n        &-thirds,\n        &-halves {\n            @extend [class*=\"gl-row\"];\n            @include row-flex;\n\n            > * {\n                @extend [class*=\"gcl\"];\n                @include column-flex;\n            }\n        }\n        &-quarters > * {\n            @extend .gl-quarter;\n        }\n        &-thirds > * {\n            @extend .gl-third;\n        }\n        &-halves > * {\n            @extend .gl-half;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/grid/motif-grid/_motif-grid.scss","// Set @total-width to 100% for a fluid layout\n$total-width: 960px;\n\n@mixin row($mar: $base-margin) {\n\n    $grid-margin: $mar / 2;\n\n    margin-left: -$grid-margin;\n    margin-right: -$grid-margin;\n\n    @include clearfix();\n}\n\n@mixin grid-column($float: left) {\n    display: inline;\n    float: $float;\n}\n\n@mixin grid-padding($mar: $base-margin) {\n\n    $grid-margin: $mar / 2;\n\n    padding-left: $grid-margin;\n    padding-right: $grid-margin;\n}\n\n@mixin grid-create ( $int, $total, $pre, $width ) {\n\n    @if ( $pre == m ) and ( $width == 75% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gm-three-quarters;\n        }\n    }\n    @if ( $pre == m ) and ( $width == 66.66666% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gm-two-thirds;\n        }\n    }\n    @if ( $pre == m ) and ( $width == 50% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gm-half;\n        }\n    }\n    @if ( $pre == m ) and ( $width == 33.33333% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gm-third;\n        }\n    }\n    @if ( $pre == m ) and ( $width == 25% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gm-quarter;\n        }\n    }\n    @if ( $pre == s ) and ( $width == 75% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gs-three-quarters;\n        }\n    }\n    @if ( $pre == s ) and ( $width == 66.66666% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gs-two-thirds;\n        }\n    }\n    @if ( $pre == s ) and ( $width == 50% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gs-half;\n        }\n    }\n    @if ( $pre == s ) and ( $width == 33.33333% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gs-third;\n        }\n    }\n    @if ( $pre == s ) and ( $width == 25% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gs-quarter;\n        }\n    }\n    @if ( $pre == l ) and ( $width == 75% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gl-three-quarters;\n        }\n    }\n    @if ( $pre == l ) and ( $width == 66.66666% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gl-two-thirds;\n        }\n    }\n    @if ( $pre == l ) and ( $width == 50% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gl-half;\n        }\n    }\n    @if ( $pre == l ) and ( $width == 33.33333% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gl-third;\n        }\n    }\n    @if ( $pre == l ) and ( $width == 25% ) {\n        [class*=\"m-#{$int}of#{$total}\"] {\n            @extend .gl-quarter;\n        }\n    }\n    @if not ( $width == 25% ) and not ( $width == 33.33333% ) and not ( $width == 50% ) and not( $width == 66.66666% ) and not( $width == 75% ){\n        [class*=\"#{$pre}-#{$int}of#{$total}\"] {\n            width: $width;\n        }\n    }\n}\n\n@mixin grid-loop ( $int, $total, $pre ) {\n    @if ( $int > 0 ) and ( $total > 4 ) {\n        @while(( $int > 0 ) and ( $total > 4 )) {\n            $width: 100% * ( $int / $total ); //removed round. Need to be refactored\n            @include grid-create($int, $total, $pre, $width);\n            $int: $int - 1;\n        }\n    }\n}\n\n@mixin grid-all( $int, $total, $pre ) {\n    @if( $int > 0 ) and ( $total > 4 ) {\n        @while( ($int) > 0 and ($total) > 4 ) {\n            @include grid-loop($int, $total, $pre);\n            $int: $total - 2;\n            $total: $total - 1;\n        }\n    }\n}\n\n@mixin row-flex {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed;\n}\n\n@mixin column-flex {\n    float: none;\n    display: inline-block;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n    text-rendering: auto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/src/scss/grid/motif-grid/mixins/_m-grid.scss","/*\nMixins based on media queries above\n*/\n/*\nUsage:\n.element{\n  @include placeholder {\n    font-style:italic;\n    color: white;\n    font-weight:100;\n  }\n}\n*/\n/*\na {\n  color: gray;\n  @include transition(color .3s ease);\n}\n*/\n/*\n.container-with-floated-children {\n  @include clearfix;\n}\n*/\n.hidden {\n  display: none; }\n\n.shown {\n  display: block; }\n\n.visually-hidden {\n  margin: -1px;\n  padding: 0;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  clip: rect(0, 0, 0, 0);\n  position: absolute; }\n\n.show-hidden {\n  width: auto;\n  height: auto;\n  margin: 0;\n  position: relative;\n  clip: auto; }\n\n.clearfix {\n  *zoom: 1; }\n  .clearfix:before, .clearfix:after {\n    content: \" \";\n    display: table; }\n  .clearfix:after {\n    clear: both; }\n\n.clearfix-simple {\n  overflow: hidden; }\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; }\n\nimg, table, tr, td {\n  border: none; }\n\nol, ul {\n  list-style-type: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n/*Common CSS Declarations*/\n/*Wrapper*/\n.wrapper {\n  width: 92%;\n  margin: 0 auto; }\n\n/*\nTable Grid based on mdo/table-grid.\nhttp://mdo.github.io/table-grid/\n*/\n/*\nGrid classes\n*/\n.table-col--center-inline {\n  text-align: center; }\n\n.table-col--center-block {\n  margin: 0 auto; }\n\n@media all and (max-width: 480px) {\n  .table-grid--padded .table-col {\n    margin: 20px; } }\n\n.table-grid--example {\n  margin-bottom: 20px; }\n  .table-grid--example .table-col {\n    text-align: center;\n    background: #11346E;\n    padding: 20px;\n    color: #fff; }\n  .table-grid--example .table-col:nth-child(odd) {\n    background: #1DF18B; }\n\n@media all and (min-width: 480px) {\n  .table-grid {\n    display: table;\n    width: 100%;\n    table-layout: fixed; }\n  .table-grid--padded {\n    border-spacing: 20px 0; }\n  .table-grid--reverse {\n    direction: rtl; }\n    .table-grid--reverse .table-col {\n      direction: ltr; }\n  .table-col {\n    display: table-cell; }\n  .table-col--vertical-aligned {\n    vertical-align: middle; } }\n\n/*\n\nResponsive Grid\n\nThe default responsive grid in Motif is built with a few rules in mind:\n\n1. Each row of columns must be wrapped in a row element\n2. There's no need to specify if a column is first or last\n\nWith that in mind, there is a basic syntax to learn for what classes to use.\nOur breakpoints are classified as:\n\n- Base\n- Small\n- Medium\n- Large\n- Extra Large\n\nOur default responsive grid system only uses 3 grids to cover all of our bases:\n\n- `grid, small` covers Base and Small viewports, but cuts off at Medium\n- `grid, medium` covers only Medium\n- `grid, large` starts at Large and covers Extra Large as well (there is no max\ncutoff value for `grid, large`)\n\nUnderstanding that, the syntax should be easy to understand. In these examples,\nwe will talk about `grid, small`:\n\n- **Rows**: `.gs-row` (Grid, Small, Row)\n- **Columns**: `.gcs` (Grid, Column, Small)\n- **Column Width**: `.gs-half` (Grid, Small, Half-Width)\n\n    <div class=\"gs-row\">\n        <div class=\"gcs gs-half\">...</div>\n        <div class=\"gcs gs-half\">...</div>\n    </div>\n\nHowever, to be slightly more succinct, you can use the condensed column syntax:\n\n- **Columns (Condensed)**: `.gcs-half` (Grid, Column, Small, Half-Width)\n\n    <div class=\"gs-row\">\n        <div class=\"gcs-half\">...</div>\n        <div class=\"gcs-half\">...</div>\n    </div>\n\nIn brief, the way the grid works is that `.gcs` floats the element to the left\n(by default), and adds padding to both the left and the right. `-half` gives\nit a width of `50%`. The combined padding of the two columns bumped up against \neach other form the full \"gutter\". The `.gs-row` then clears the floats and has\na *negative* margin on both the left and the right that pops the columns out to\nthe sides the exact width of their paddings, meaning the column content lines \nup with the site boundaries on the left and right without the need to specify \n\"first\" or \"last\" column classes.\n\nTo use this responsively, then, you just add the classes by breakpoint:\n\n    <div class=\"gs-row gm-row gl-row\">\n        <div class=\"gcs-half gcm-third gcl-quarter\">\n            ...\n        </div>\n        <div class=\"gcs-half gcm-two-thirds gcl-three-quarters\">\n            ...\n        </div>\n    </div>\n\nBy default, the column breakdown of each grid breakpoint:\n\n- `grid, small`: 4 columns\n- `grid, medium`: 9 columns\n- `grid, large`: 12 columns\n\nFor the larger grids, the classes follow the numbers closely...\n\n    - `.gcl-10of12\n    - `.gcm-4of9`\n\n...in just about every combination (based on their total column number), but \nall of the grids also have a few \"fuzzy\" shortcuts as well:\n\n    - `half`\n    - `third`\n    - `quarter`\n    - `three-quarters`\n    - `two-thirds`\n\n*/\n.g-halves,\n.g-thirds,\n.g-quarters {\n  margin-left: -12px;\n  margin-right: -12px;\n  *zoom: 1;\n  /* Pretty */\n  letter-spacing: -0.31em;\n  text-rendering: optimizespeed; }\n  .g-halves:before, .g-halves:after,\n  .g-thirds:before,\n  .g-thirds:after,\n  .g-quarters:before,\n  .g-quarters:after {\n    content: \" \";\n    display: table; }\n  .g-halves:after,\n  .g-thirds:after,\n  .g-quarters:after {\n    clear: both; }\n  ul .g-halves, ul\n  .g-thirds, ul\n  .g-quarters {\n    padding-left: 0;\n    list-style: none outside none; }\n  .g-halves > *,\n  .g-thirds > *,\n  .g-quarters > * {\n    display: inline;\n    float: left;\n    padding-left: 12px;\n    padding-right: 12px;\n    /* Display & Box Model */\n    display: inline-block;\n    /* Positioning */\n    float: none;\n    /* Pretty */\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n    text-rendering: auto; }\n\n.g-halves > * {\n  width: 50%; }\n\n.g-thirds > * {\n  width: 33.33333%; }\n\n.g-quarters > * {\n  width: 25%; }\n\n.opera-only :-o-prefocus,\n.g-thirds {\n  word-spacing: -0.43em; }\n\n/**\n * Mobile Grid\n */\n@media all and (max-width: 768px) {\n  [class*=\"gs-row\"], .gs-quarters, .gs-thirds, .gs-halves {\n    margin-left: -12px;\n    margin-right: -12px;\n    *zoom: 1; }\n    [class*=\"gs-row\"]:before, .gs-quarters:before, .gs-thirds:before, .gs-halves:before, [class*=\"gs-row\"]:after, .gs-quarters:after, .gs-thirds:after, .gs-halves:after {\n      content: \" \";\n      display: table; }\n    [class*=\"gs-row\"]:after, .gs-quarters:after, .gs-thirds:after, .gs-halves:after {\n      clear: both; }\n    ul [class*=\"gs-row\"], ul .gs-quarters, ul .gs-thirds, ul .gs-halves {\n      padding-left: 0;\n      list-style: none outside none; }\n  .gs-row--rtl > [class*=\"gcs\"], .gs-quarters.gs-row--rtl > *, .gs-thirds.gs-row--rtl > *, .gs-halves.gs-row--rtl > * {\n    float: right; }\n  .gs-row--ltr > [class*=\"gcs\"], .gs-quarters.gs-row--ltr > *, .gs-thirds.gs-row--ltr > *, .gs-halves.gs-row--ltr > * {\n    float: left; }\n  [class*=\"gcs\"], .gs-quarters > *, .gs-thirds > *, .gs-halves > * {\n    display: inline;\n    float: left;\n    padding-left: 12px;\n    padding-right: 12px; }\n  .gs-quarter, .gs-quarters > *,\n  .gcs-quarter {\n    width: 25%; }\n  .gs-third, .gs-thirds > *,\n  .gcs-third {\n    width: 33.33333%; }\n  .gs-half, .gs-halves > *,\n  .gcs-half {\n    width: 50%; }\n  .gs-two-thirds,\n  .gcs-two-thirds {\n    width: 66.66666%; }\n  .gs-three-quarters,\n  .gcs-three-quarters {\n    width: 75%; }\n  .gs-full,\n  .gcs-full {\n    width: 100%; }\n  .gs-row--flex {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n  .gs-row--flex > [class*=\"gcs\"], .gs-quarters.gs-row--flex > *, .gs-thirds.gs-row--flex > *, .gs-halves.gs-row--flex > * {\n    float: none;\n    display: inline-block;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n    text-rendering: auto; }\n  .opera-only :-o-prefocus,\n  .gs-row--flex {\n    word-spacing: -0.43em; }\n  .gs-quarters, .gs-thirds, .gs-halves {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n    .gs-quarters > *, .gs-thirds > *, .gs-halves > * {\n      float: none;\n      display: inline-block;\n      letter-spacing: normal;\n      word-spacing: normal;\n      vertical-align: top;\n      text-rendering: auto; } }\n\n/**\n * Tablet Grid\n */\n@media all and (min-width: 768px) and (max-width: 992px) {\n  [class*=\"gm-row\"], .gm-quarters, .gm-thirds, .gm-halves {\n    margin-left: -16px;\n    margin-right: -16px;\n    *zoom: 1; }\n    [class*=\"gm-row\"]:before, .gm-quarters:before, .gm-thirds:before, .gm-halves:before, [class*=\"gm-row\"]:after, .gm-quarters:after, .gm-thirds:after, .gm-halves:after {\n      content: \" \";\n      display: table; }\n    [class*=\"gm-row\"]:after, .gm-quarters:after, .gm-thirds:after, .gm-halves:after {\n      clear: both; }\n    ul [class*=\"gm-row\"], ul .gm-quarters, ul .gm-thirds, ul .gm-halves {\n      padding-left: 0;\n      list-style: none outside none; }\n  .gm-row--rtl > [class*=\"gcm\"], .gm-quarters.gm-row--rtl > *, .gm-thirds.gm-row--rtl > *, .gm-halves.gm-row--rtl > * {\n    float: right; }\n  .gm-row--ltr > [class*=\"gcm\"], .gm-quarters.gm-row--ltr > *, .gm-thirds.gm-row--ltr > *, .gm-halves.gm-row--ltr > * {\n    float: left; }\n  [class*=\"gcm\"], .gm-quarters > *, .gm-thirds > *, .gm-halves > * {\n    display: inline;\n    float: left;\n    padding-left: 16px;\n    padding-right: 16px; }\n  .gm-quarter, [class*=\"m-2of8\"], .gm-quarters > *,\n  .gcm-quarter {\n    width: 25%; }\n  .gm-third, .gm-thirds > *,\n  .gcm-third {\n    width: 33.33333%; }\n  .gm-half, [class*=\"m-4of8\"], [class*=\"m-3of6\"], .gm-halves > *,\n  .gcm-half {\n    width: 50%; }\n  .gm-two-thirds,\n  .gcm-two-thirds {\n    width: 66.66666%; }\n  .gm-three-quarters, [class*=\"m-6of8\"],\n  .gcm-three-quarters {\n    width: 75%; }\n  .gm-full,\n  .gcm-full {\n    width: 100%; }\n  [class*=\"m-8of9\"] {\n    width: 88.88889%; }\n  [class*=\"m-7of9\"] {\n    width: 77.77778%; }\n  [class*=\"m-6of9\"] {\n    width: 66.66667%; }\n  [class*=\"m-5of9\"] {\n    width: 55.55556%; }\n  [class*=\"m-4of9\"] {\n    width: 44.44444%; }\n  [class*=\"m-3of9\"] {\n    width: 33.33333%; }\n  [class*=\"m-2of9\"] {\n    width: 22.22222%; }\n  [class*=\"m-1of9\"] {\n    width: 11.11111%; }\n  [class*=\"m-7of8\"] {\n    width: 87.5%; }\n  [class*=\"m-5of8\"] {\n    width: 62.5%; }\n  [class*=\"m-3of8\"] {\n    width: 37.5%; }\n  [class*=\"m-1of8\"] {\n    width: 12.5%; }\n  [class*=\"m-6of7\"] {\n    width: 85.71429%; }\n  [class*=\"m-5of7\"] {\n    width: 71.42857%; }\n  [class*=\"m-4of7\"] {\n    width: 57.14286%; }\n  [class*=\"m-3of7\"] {\n    width: 42.85714%; }\n  [class*=\"m-2of7\"] {\n    width: 28.57143%; }\n  [class*=\"m-1of7\"] {\n    width: 14.28571%; }\n  [class*=\"m-5of6\"] {\n    width: 83.33333%; }\n  [class*=\"m-4of6\"] {\n    width: 66.66667%; }\n  [class*=\"m-2of6\"] {\n    width: 33.33333%; }\n  [class*=\"m-1of6\"] {\n    width: 16.66667%; }\n  [class*=\"m-4of5\"] {\n    width: 80%; }\n  [class*=\"m-3of5\"] {\n    width: 60%; }\n  [class*=\"m-2of5\"] {\n    width: 40%; }\n  [class*=\"m-1of5\"] {\n    width: 20%; }\n  .gm-row--flex {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n  .gm-row--flex > [class*=\"gcm\"], .gm-quarters.gm-row--flex > *, .gm-thirds.gm-row--flex > *, .gm-halves.gm-row--flex > * {\n    float: none;\n    display: inline-block;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n    text-rendering: auto; }\n  .opera-only :-o-prefocus,\n  .gm-row--flex {\n    word-spacing: -0.43em; }\n  .gm-quarters, .gm-thirds, .gm-halves {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n    .gm-quarters > *, .gm-thirds > *, .gm-halves > * {\n      float: none;\n      display: inline-block;\n      letter-spacing: normal;\n      word-spacing: normal;\n      vertical-align: top;\n      text-rendering: auto; } }\n\n/**\n * Desktop Grid\n */\n/*\n\n````desktop-grid\n<div class=\"gl-quarters\">\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n    <div>\n        <div class=\"block\">Quarter</div>\n    </div>\n</div>\n<div class=\"gl-thirds\">\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n    <div>\n        <div class=\"block\">Third</div>\n    </div>\n</div>\n<div class=\"gl-halves\">\n    <div>\n        <div class=\"block\">Half</div>\n    </div>\n    <div>\n        <div class=\"block\">Half</div>\n    </div>\n</div>\n<div class=\"gl-row\">\n    <div class=\"gcl-two-thirds\">\n        <div class=\"block\">Two Thirds</div>\n    </div>\n    <div class=\"gcl-third\">\n        <div class=\"block\">Third</div>\n    </div>\n</div>\n<div class=\"gl-row\">\n    <div class=\"gcl-three-quarters\">\n        <div class=\"block\">Three Quarters</div>\n    </div>\n    <div class=\"gcl-quarter\">\n        <div class=\"block\">Quarter</div>\n    </div>\n</div>\n````\n\n*/\n@media all and (min-width: 992px) {\n  [class*=\"gl-row\"], .gl-quarters, .gl-thirds, .gl-halves {\n    margin-left: -18px;\n    margin-right: -18px;\n    *zoom: 1; }\n    [class*=\"gl-row\"]:before, .gl-quarters:before, .gl-thirds:before, .gl-halves:before, [class*=\"gl-row\"]:after, .gl-quarters:after, .gl-thirds:after, .gl-halves:after {\n      content: \" \";\n      display: table; }\n    [class*=\"gl-row\"]:after, .gl-quarters:after, .gl-thirds:after, .gl-halves:after {\n      clear: both; }\n    ul [class*=\"gl-row\"], ul .gl-quarters, ul .gl-thirds, ul .gl-halves {\n      padding-left: 0;\n      list-style: none outside none; }\n  .gl-row--rtl > [class*=\"gcl\"], .gl-quarters.gl-row--rtl > *, .gl-thirds.gl-row--rtl > *, .gl-halves.gl-row--rtl > * {\n    float: right; }\n  .gl-row--ltr > [class*=\"gcl\"], .gl-quarters.gl-row--ltr > *, .gl-thirds.gl-row--ltr > *, .gl-halves.gl-row--ltr > * {\n    float: left; }\n  [class*=\"gcl\"], .gl-quarters > *, .gl-thirds > *, .gl-halves > * {\n    display: inline;\n    float: left;\n    padding-left: 18px;\n    padding-right: 18px; }\n  .gl-quarter, [class*=\"m-3of12\"], [class*=\"m-2of8\"], .gl-quarters > *,\n  .gcl-quarter {\n    width: 25%; }\n  .gl-third, .gl-thirds > *,\n  .gcl-third {\n    width: 33.33333%; }\n  .gl-half, [class*=\"m-6of12\"], [class*=\"m-5of10\"], [class*=\"m-4of8\"], [class*=\"m-3of6\"], .gl-halves > *,\n  .gcl-half {\n    width: 50%; }\n  .gl-two-thirds,\n  .gcl-two-thirds {\n    width: 66.66666%; }\n  .gl-three-quarters, [class*=\"m-9of12\"], [class*=\"m-6of8\"],\n  .gcl-three-quarters {\n    width: 75%; }\n  .gl-full,\n  .gcl-full {\n    width: 100%; }\n  [class*=\"l-11of12\"] {\n    width: 91.66667%; }\n  [class*=\"l-10of12\"] {\n    width: 83.33333%; }\n  [class*=\"l-8of12\"] {\n    width: 66.66667%; }\n  [class*=\"l-7of12\"] {\n    width: 58.33333%; }\n  [class*=\"l-5of12\"] {\n    width: 41.66667%; }\n  [class*=\"l-4of12\"] {\n    width: 33.33333%; }\n  [class*=\"l-2of12\"] {\n    width: 16.66667%; }\n  [class*=\"l-1of12\"] {\n    width: 8.33333%; }\n  [class*=\"l-10of11\"] {\n    width: 90.90909%; }\n  [class*=\"l-9of11\"] {\n    width: 81.81818%; }\n  [class*=\"l-8of11\"] {\n    width: 72.72727%; }\n  [class*=\"l-7of11\"] {\n    width: 63.63636%; }\n  [class*=\"l-6of11\"] {\n    width: 54.54545%; }\n  [class*=\"l-5of11\"] {\n    width: 45.45455%; }\n  [class*=\"l-4of11\"] {\n    width: 36.36364%; }\n  [class*=\"l-3of11\"] {\n    width: 27.27273%; }\n  [class*=\"l-2of11\"] {\n    width: 18.18182%; }\n  [class*=\"l-1of11\"] {\n    width: 9.09091%; }\n  [class*=\"l-9of10\"] {\n    width: 90%; }\n  [class*=\"l-8of10\"] {\n    width: 80%; }\n  [class*=\"l-7of10\"] {\n    width: 70%; }\n  [class*=\"l-6of10\"] {\n    width: 60%; }\n  [class*=\"l-4of10\"] {\n    width: 40%; }\n  [class*=\"l-3of10\"] {\n    width: 30%; }\n  [class*=\"l-2of10\"] {\n    width: 20%; }\n  [class*=\"l-1of10\"] {\n    width: 10%; }\n  [class*=\"l-8of9\"] {\n    width: 88.88889%; }\n  [class*=\"l-7of9\"] {\n    width: 77.77778%; }\n  [class*=\"l-6of9\"] {\n    width: 66.66667%; }\n  [class*=\"l-5of9\"] {\n    width: 55.55556%; }\n  [class*=\"l-4of9\"] {\n    width: 44.44444%; }\n  [class*=\"l-3of9\"] {\n    width: 33.33333%; }\n  [class*=\"l-2of9\"] {\n    width: 22.22222%; }\n  [class*=\"l-1of9\"] {\n    width: 11.11111%; }\n  [class*=\"l-7of8\"] {\n    width: 87.5%; }\n  [class*=\"l-5of8\"] {\n    width: 62.5%; }\n  [class*=\"l-3of8\"] {\n    width: 37.5%; }\n  [class*=\"l-1of8\"] {\n    width: 12.5%; }\n  [class*=\"l-6of7\"] {\n    width: 85.71429%; }\n  [class*=\"l-5of7\"] {\n    width: 71.42857%; }\n  [class*=\"l-4of7\"] {\n    width: 57.14286%; }\n  [class*=\"l-3of7\"] {\n    width: 42.85714%; }\n  [class*=\"l-2of7\"] {\n    width: 28.57143%; }\n  [class*=\"l-1of7\"] {\n    width: 14.28571%; }\n  [class*=\"l-5of6\"] {\n    width: 83.33333%; }\n  [class*=\"l-4of6\"] {\n    width: 66.66667%; }\n  [class*=\"l-2of6\"] {\n    width: 33.33333%; }\n  [class*=\"l-1of6\"] {\n    width: 16.66667%; }\n  [class*=\"l-4of5\"] {\n    width: 80%; }\n  [class*=\"l-3of5\"] {\n    width: 60%; }\n  [class*=\"l-2of5\"] {\n    width: 40%; }\n  [class*=\"l-1of5\"] {\n    width: 20%; }\n  /*\n\n    Media Grid\n\n    The Media Grid allows you to place a grid of photos or videos (catalog or\n    retail products, etc.) without floating them, alleviating the need to concern\n    yourself with clearing the floats with rows should an object extend further\n    than another. Also, because they are not floating, it allows you to align\n    the entire group center, making sure any \"orphaned\" grid entries are centered.\n\n    The syntax is simply the same as the regular responsive grid system, except\n    the row class has a `--flex` modifier.\n\n    ````media-grid\n    <ul class=\"gs-halves gm-thirds gl-quarters\">\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n                <figcaption>Alderaan is peaceful. We have no weapons.</figcaption>\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n        <li>\n            <figure class=\"figure\">\n                <img src=\"http://placehold.it/400\">\n            </figure>\n        </li>\n    </ul>\n    ````\n\n    */\n  .gl-row--flex {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n  .gl-row--flex > [class*=\"gcl\"], .gl-quarters.gl-row--flex > *, .gl-thirds.gl-row--flex > *, .gl-halves.gl-row--flex > * {\n    float: none;\n    display: inline-block;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n    text-rendering: auto; }\n  .opera-only :-o-prefocus,\n  .gl-row--flex {\n    word-spacing: -0.43em; }\n  .gl-quarters, .gl-thirds, .gl-halves {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n    .gl-quarters > *, .gl-thirds > *, .gl-halves > * {\n      float: none;\n      display: inline-block;\n      letter-spacing: normal;\n      word-spacing: normal;\n      vertical-align: top;\n      text-rendering: auto; } }\n\n/*Header*/\n/*Top navigation*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/style.scss"],"sourceRoot":""}